package org.kson.jsonsuite

import java.nio.file.Files.createTempDirectory
import java.nio.file.Paths
import kotlin.test.Test
import kotlin.test.assertEquals
import kotlin.test.assertTrue

class JsonTestSuiteGeneratorTest {
    @Test
    fun testGenerate() {
        val tempDirectory = createTempDirectory("JsonTestSuiteGeneratorTest")

        val testPackageName = "org.json.parser.json.generated.TEST"

        // the directory this test is currently running in
        val runningPath = Paths.get("").toAbsolutePath()
        
        // this test is sometimes runs from the project root (as part of the root project),
        // and sometimes run in buildSrc/ (as part of the buildSrc subproject), so this
        // finds the actual project root for us
        val projectRoot = if (runningPath.fileName.toString() == "buildSrc") {
            runningPath.parent
        } else {
            runningPath
        }

        val jsonTestSuiteGenerator = JsonTestSuiteGenerator(projectRoot, tempDirectory, testPackageName)
        jsonTestSuiteGenerator.generate()

        assertTrue(
            jsonTestSuiteGenerator.testDefinitionFilesDir.toFile().isDirectory,
            "test suite directory should exist and be a directory"
        )

        val generatedTestContents = jsonTestSuiteGenerator.generatedTestPath.toFile().readText()

        assertTrue(
            generatedTestContents
                // sanity check this is the test class we expect to be generated by checking its classname
                .contains("class JsonSuiteTest"),
            "test class should be generated"
        )

        val packageNameStartIndex = "package ".length
        assertEquals(
            testPackageName,
            generatedTestContents.substring(packageNameStartIndex, packageNameStartIndex + testPackageName.length),
            "generated test file should start with configured package declaration"
        )
    }
}